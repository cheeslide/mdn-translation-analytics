name: check l10n.sourceCommit

on:
  # schedule:
  # - cron: ""
  workflow_dispatch:

env:
  file_distances_name: "distances.csv" # when it, also change jobs.publish_distances.with.filename
  file_no_sourceCommit_name: "no_sourceCommit.txt" #  when it, also change change jobs.publish_no_sourceCommit.filename

jobs:
  check_sourceCommit:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: cache and checkout mdn/translated-content
        id: get-translated-content
        uses: ./.github/actions/cached-checkout
        with:
          repo: mdn/translated-content
          path: translated-content

      - name: cache and checkout mdn/content (depth 0)
        id: get-content
        uses: ./.github/actions/cached-checkout
        with:
          repo: mdn/content
          path: content
          fetch-depth: 0

      - name: Cache ${{ env.file_distances_name }}, ${{ env.file_no_sourceCommit_name }}
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ env.file_distances_name }}, ${{ env.file_no_sourceCommit_name }}
          key: check_sourceCommit output ${{ steps.get-translated-content.outputs.latest-hash }}~${{ steps.get-content.outputs.latest-hash }}

      - if: steps.cache.outputs.cache-hit != 'true'
        name: run script
        run: |
          $en_folder = (Resolve-Path -Path "content\files\en-us").Path
          $zh_folder = (Resolve-Path -Path "translated-content\files\zh-cn").Path
          $env:GIT_DIR = ".\content\.git"
          $env:GIT_WORK_TREE = ".\content"
          Write-Host $en_folder $zh_folder $env:GIT_DIR $env:GIT_WORK_TREE

          
          $files = Get-ChildItem -Path $zh_folder -Recurse -File -Filter "*.md"|`
          Select-Object -ExpandProperty FullName
          Write-Host "length: " $files.Length
          "====== SAMPLE ======"
          $files | Select-Object -First 6 | Write-Host
          
          $commitDistances = [System.Collections.Generic.List[PSObject]]::new()
          $badFrontMatter = [System.Collections.Generic.List[String]]::new()
          
          ForEach ($file in $files) {
              $file_start = -join (Get-Content -Path $file -TotalCount 6)
              if ($file_start -match "\s{1,}sourceCommit:\s?([0-9a-f]{40})") {
                  $relative_path = $file -replace [regex]::Escape($translation_folder), ""
                  $en_file = Join-Path -Path $en_folder -ChildPath $relative_path
                  $the_redundant_variable_to_remove_the_whitespace = $Matches[1] + "..HEAD"
                  $commitDistances.add([PSCustomObject]@{
                      File = $file
                      Distance = git rev-list --count $the_redundant_variable_to_remove_the_whitespace -- $en_file
                  })
              } else {
                  $badFrontMatter.add($file)
              }
          }
          
          $commitDistances.ToArray() | Export-Csv -Path ${{ env.file_distances_name }} -NoTypeInformation
          $badFrontMatter | Out-File -FilePath ${{ env.file_no_sourceCommit_name }} -Encoding ascii

      - if: steps.cache.outputs.cache-hit != 'true'
        name: publish ${{ env.file_distances_name }}
        uses: ./.github/actions/publish
        with:
          filename: ${{ env.file_distances_name }}
          ACCOUNT_TOKEN_GIST: ${{ secrets.ACCOUNT_TOKEN_GIST }}
          TARGET_GIST_ID: ${{ vars.TARGET_GIST_ID }}

      - if: steps.cache.outputs.cache-hit != 'true'
        name: publish ${{ env.file_no_sourceCommit_name }}
        uses: ./.github/actions/publish
        with:
          filename: ${{ env.file_no_sourceCommit_name }}
          ACCOUNT_TOKEN_GIST: ${{ secrets.ACCOUNT_TOKEN_GIST }}
          TARGET_GIST_ID: ${{ vars.TARGET_GIST_ID }}
